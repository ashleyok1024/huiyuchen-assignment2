{"ast":null,"code":"var _jsxFileName = \"/Users/huiyuchen/6510_HuiyuChen/HuiyuChen-cs5610-project2-sets-card-game/huiyu-chen-project2/src/Components/App.js\";\nimport '../css/App.css';\nimport React from 'react';\nimport SetTable from './SetTable';\nimport { connect } from 'react-redux';\nimport LevelButton from './LevelButton';\nimport { ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  handleDispatch(action, level) {\n    this.props.dispatch({\n      type: action,\n      value: level\n    });\n  }\n\n  screenShow() {\n    if (this.props.gameStarted) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gamePageButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gamePageButton\",\n            onClick: () => this.handleDispatch(\"newGame\"),\n            children: \"RESET GAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gamePageButton\",\n            onClick: () => this.handleDispatch(\"draw3Cards\"),\n            children: \"DRAW 3 CARDS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gamePageButton\",\n            onClick: () => this.handleDispatch(\"endGameAndChangeMode\"),\n            children: \"CHANGE MODE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deckInfo\",\n          children: [\"cards left in deck\", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: this.props.deck.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SetTable, {\n          tableShow: this.props.tableShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(LevelButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SET Card - Go!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), this.screenShow()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapDispatchToProps = function (dispatch, props) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nlet mapStateTpProps = function (state, props) {\n  return {\n    gameStarted: state.cards.gameStarted,\n    level: state.cards.level,\n    deck: state.cards.deck,\n    tableShow: state.cards.tableShow,\n    selected: state.cards.selected\n  };\n};\n\nexport default connect(mapStateTpProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/huiyuchen/6510_HuiyuChen/HuiyuChen-cs5610-project2-sets-card-game/huiyu-chen-project2/src/Components/App.js"],"names":["React","SetTable","connect","LevelButton","ToastContainer","App","Component","handleDispatch","action","level","props","dispatch","type","value","screenShow","gameStarted","deck","length","tableShow","render","console","log","mapDispatchToProps","mapStateTpProps","state","cards","selected"],"mappings":";AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAC7BC,EAAAA,cAAc,CAACC,MAAD,EAASC,KAAT,EAAgB;AAC1B,SAAKC,KAAL,CAAWC,QAAX,CAAoB;AAACC,MAAAA,IAAI,EAAEJ,MAAP;AAAeK,MAAAA,KAAK,EAAEJ;AAAtB,KAApB;AACH;;AAEDK,EAAAA,UAAU,GAAE;AACR,QAAG,KAAKJ,KAAL,CAAWK,WAAd,EAA0B;AACtB,0BACI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAgC,YAAA,OAAO,EAAE,MAAM,KAAKR,cAAL,CAAoB,SAApB,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAgC,YAAA,OAAO,EAAE,MAAM,KAAKA,cAAL,CAAoB,YAApB,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAgC,YAAA,OAAO,EAAE,MAAM,KAAKA,cAAL,CAAoB,sBAApB,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,wDAEI;AAAA,sBAAI,KAAKG,KAAL,CAAWM,IAAX,CAAgBC;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAWI,QAAC,QAAD;AAAU,UAAA,SAAS,EAAE,KAAKP,KAAL,CAAWQ;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAeH,KAhBD,MAgBO;AACH,0BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKI,UAAL,EAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AArC4B;;AAwCjC,IAAIQ,kBAAkB,GAAG,UAASX,QAAT,EAAmBD,KAAnB,EAA0B;AAC/C,SAAO;AACLC,IAAAA,QAAQ,EAAEA;AADL,GAAP;AAGH,CAJD;;AAMA,IAAIY,eAAe,GAAG,UAASC,KAAT,EAAgBd,KAAhB,EAAuB;AACzC,SAAO;AACHK,IAAAA,WAAW,EAAES,KAAK,CAACC,KAAN,CAAYV,WADtB;AAEHN,IAAAA,KAAK,EAAEe,KAAK,CAACC,KAAN,CAAYhB,KAFhB;AAGHO,IAAAA,IAAI,EAAGQ,KAAK,CAACC,KAAN,CAAYT,IAHhB;AAIHE,IAAAA,SAAS,EAAGM,KAAK,CAACC,KAAN,CAAYP,SAJrB;AAKHQ,IAAAA,QAAQ,EAAEF,KAAK,CAACC,KAAN,CAAYC;AALnB,GAAP;AAOH,CARD;;AAUA,eAAexB,OAAO,CAClBqB,eADkB,EAElBD,kBAFkB,CAAP,CAGbjB,GAHa,CAAf","sourcesContent":["import '../css/App.css';\nimport React from 'react';\nimport SetTable from './SetTable';\nimport { connect } from 'react-redux';\nimport LevelButton from './LevelButton';\nimport { ToastContainer } from \"react-toastify\";\n\nclass App extends React.Component{\n    handleDispatch(action, level) {\n        this.props.dispatch({type: action, value: level});\n    }\n\n    screenShow(){\n        if(this.props.gameStarted){\n            return (\n                <div>\n                    <div className=\"gamePageButtons\">\n                        <div className=\"gamePageButton\" onClick={() => this.handleDispatch(\"newGame\")}>RESET GAME</div>\n                        <div className=\"gamePageButton\" onClick={() => this.handleDispatch(\"draw3Cards\")}>DRAW 3 CARDS</div>\n                        <div className=\"gamePageButton\" onClick={() => this.handleDispatch(\"endGameAndChangeMode\")}>CHANGE MODE</div>\n                    </div>\n                    <div className=\"deckInfo\">\n                        cards left in deck\n                        <b>{this.props.deck.length}</b> \n                        \n                    </div>\n                    <SetTable tableShow={this.props.tableShow}></SetTable>\n                </div>\n            )\n        } else {\n            return (\n                <LevelButton />\n            )\n        }\n    }\n\n    render() {\n        console.log(this.props);\n        return(\n            <div>\n                <h1>SET Card - Go!</h1>\n                {this.screenShow()}\n            </div>\n        )\n    } \n}\n\nlet mapDispatchToProps = function(dispatch, props) {\n    return {\n      dispatch: dispatch,\n    }\n}\n\nlet mapStateTpProps = function(state, props) {\n    return {\n        gameStarted: state.cards.gameStarted,\n        level: state.cards.level,\n        deck : state.cards.deck,\n        tableShow : state.cards.tableShow,\n        selected: state.cards.selected,\n    }\n}\n\nexport default connect(\n    mapStateTpProps,\n    mapDispatchToProps\n)(App)"]},"metadata":{},"sourceType":"module"}